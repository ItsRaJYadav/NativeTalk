{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport { AuthContext } from \"../context/authorization\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(AuthContext),\n    _useContext2 = _slicedToArray(_useContext, 2),\n    state = _useContext2[0],\n    setState = _useContext2[1];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log(email, password);\n      try {\n        var response = yield axios.post('/auth/login', {\n          email: email,\n          password: password\n        });\n        if (response.status === 200) {\n          setState(response.data);\n          yield AsyncStorage.setItem('@auth', JSON.stringify(response.data));\n          Alert.alert('Success', 'Login successful!', [{\n            text: 'OK',\n            onPress: function onPress() {\n              return navigation.navigate('Chatlist');\n            }\n          }]);\n        } else {\n          Alert.alert('Error', 'Login failed. Please try again.');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        Alert.alert('Error', 'An error occurred during login.');\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Login to My Chat App\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsxs(View, {\n      style: styles.passwordContainer,\n      children: [_jsx(TextInput, {\n        style: styles.passwordInput,\n        placeholder: \"Password\",\n        secureTextEntry: !showPassword,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.showPasswordButton,\n        onPress: function onPress() {\n          return setShowPassword(!showPassword);\n        },\n        children: _jsx(FontAwesome, {\n          name: showPassword ? 'eye-slash' : 'eye',\n          size: 24,\n          color: \"#007BFF\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.loginButton,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.registerLink,\n      onPress: function onPress() {\n        return navigation.navigate('Register');\n      },\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Don't have an Account?\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#f0f0f0'\n  },\n  header: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginBottom: 16\n  },\n  passwordContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%'\n  },\n  passwordInput: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginBottom: 16\n  },\n  showPasswordButton: {\n    position: 'absolute',\n    right: 10,\n    top: 14\n  },\n  loginButton: {\n    backgroundColor: '#007BFF',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  registerLink: {\n    alignSelf: 'flex-start',\n    marginTop: 10\n  },\n  linkText: {\n    color: '#007BFF',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useContext","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","axios","AuthContext","AsyncStorage","FontAwesome","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useContext","_useContext2","_slicedToArray","state","setState","_useState","_useState2","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","handleLogin","_ref2","_asyncToGenerator","console","log","response","post","status","data","setItem","JSON","stringify","alert","text","onPress","navigate","error","apply","arguments","style","styles","container","children","header","input","placeholder","onChangeText","passwordContainer","passwordInput","secureTextEntry","showPasswordButton","name","size","color","loginButton","buttonText","registerLink","linkText","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","flexDirection","position","right","top","paddingVertical","alignSelf","marginTop"],"sources":["D:/React-Native/chat/client/screens/Login.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../context/authorization';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { FontAwesome } from '@expo/vector-icons'; \r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [state, setState] = useContext(AuthContext);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleLogin = async () => {\r\n    console.log(email, password);\r\n    try {\r\n      const response = await axios.post('/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setState(response.data);\r\n        await AsyncStorage.setItem('@auth', JSON.stringify(response.data));\r\n        Alert.alert('Success', 'Login successful!', [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => navigation.navigate('Chatlist'),\r\n          },\r\n        ]);\r\n      } else {\r\n        Alert.alert('Error', 'Login failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      Alert.alert('Error', 'An error occurred during login.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Login to My Chat App</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n      />\r\n      <View style={styles.passwordContainer}>\r\n        <TextInput\r\n          style={styles.passwordInput}\r\n          placeholder=\"Password\"\r\n          secureTextEntry={!showPassword}\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.showPasswordButton}\r\n          onPress={() => setShowPassword(!showPassword)}\r\n        >\r\n          <FontAwesome\r\n            name={showPassword ? 'eye-slash' : 'eye'}\r\n            size={24}\r\n            color=\"#007BFF\"\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\r\n        <Text style={styles.buttonText}>Login</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.registerLink}\r\n        onPress={() => navigation.navigate('Register')}\r\n      >\r\n        <Text style={styles.linkText}>Don't have an Account?</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n    backgroundColor: '#f0f0f0', // Solid background color\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 16,\r\n  },\r\n  passwordContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n  },\r\n  passwordInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 16,\r\n  },\r\n  showPasswordButton: {\r\n    position: 'absolute',\r\n    right: 10,\r\n    top: 14,\r\n  },\r\n  loginButton: {\r\n    backgroundColor: '#007BFF',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  registerLink: {\r\n    alignSelf: 'flex-start',\r\n    marginTop: 10,\r\n  },\r\n  linkText: {\r\n    color: '#007BFF',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}