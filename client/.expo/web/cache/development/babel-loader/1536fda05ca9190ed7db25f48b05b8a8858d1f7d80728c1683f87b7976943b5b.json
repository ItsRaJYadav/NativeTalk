{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport LandingPage from \"./screens/LandingPage\";\nimport ChatScreen from \"./screens/Chat\";\nimport LoginScreen from \"./screens/Login\";\nimport { AuthContext } from \"./context/authorization\";\nimport RegistrationScreen from \"./screens/Register\";\nimport StatusScreen from \"./screens/Status\";\nimport { useContext } from 'react';\nimport ProfileScreen from \"./screens/Profile\";\nimport AllUsersScreen from \"./screens/AllUsers\";\nimport ChatListScreen from \"./screens/ChatList\";\nimport UserProfileScreen from \"./screens/UserProfile\";\nimport AllRequestsScreen from \"./screens/AllRequest\";\nimport EditProfileScreen from \"./screens/AllRequest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useContext = useContext(AuthContext),\n    _useContext2 = _slicedToArray(_useContext, 1),\n    state = _useContext2[0];\n  var authorizedUser = (state == null ? void 0 : state.user) && (state == null ? void 0 : state.token);\n  return _jsx(_Fragment, {\n    children: _jsx(Stack.Navigator, {\n      initialRouteName: \"LandingPage\",\n      children: authorizedUser ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Chatlist\",\n          component: ChatListScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AllUsers\",\n          component: AllUsersScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Chat\",\n          component: ChatScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Status\",\n          component: StatusScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Profile\",\n          component: ProfileScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"UserProfile\",\n          component: UserProfileScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AllRequests\",\n          component: AllRequestsScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"EditProfile\",\n          component: EditProfileScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"LandingPage\",\n          component: LandingPage,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: LoginScreen,\n          options: {\n            headerShown: true\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Register\",\n          component: RegistrationScreen,\n          options: {\n            headerShown: false\n          }\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["createNativeStackNavigator","LandingPage","ChatScreen","LoginScreen","AuthContext","RegistrationScreen","StatusScreen","useContext","ProfileScreen","AllUsersScreen","ChatListScreen","UserProfileScreen","AllRequestsScreen","EditProfileScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Stack","App","_useContext","_useContext2","_slicedToArray","state","authorizedUser","user","token","children","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["D:/React-Native/chat/client/Navigation.js"],"sourcesContent":["import { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport LandingPage from './screens/LandingPage';\r\nimport ChatScreen from './screens/Chat';\r\nimport LoginScreen from './screens/Login';\r\nimport { AuthContext } from './context/authorization';\r\nimport RegistrationScreen from './screens/Register';\r\nimport StatusScreen from './screens/Status';\r\nimport { useContext } from 'react';\r\nimport ProfileScreen from \"./screens/Profile\";\r\nimport AllUsersScreen from \"./screens/AllUsers\";\r\nimport ChatListScreen from \"./screens/ChatList\";\r\nimport UserProfileScreen from \"./screens/UserProfile\";\r\nimport AllRequestsScreen from \"./screens/AllRequest\";\r\nimport EditProfileScreen from \"./screens/AllRequest\";\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n\r\n    const [state] = useContext(AuthContext);\r\n    const authorizedUser = state?.user && state?.token;\r\n\r\n    return (\r\n        <>\r\n\r\n            <Stack.Navigator initialRouteName=\"LandingPage\">\r\n                {\r\n                    authorizedUser ?\r\n                        (<>\r\n\r\n                            <Stack.Screen\r\n                                name=\"Chatlist\"\r\n                                component={ChatListScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"AllUsers\"\r\n                                component={AllUsersScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"Chat\"\r\n                                component={ChatScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"Status\"\r\n                                component={StatusScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"Profile\"\r\n                                component={ProfileScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"UserProfile\"\r\n                                component={UserProfileScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"AllRequests\"\r\n                                component={AllRequestsScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n\r\n                            <Stack.Screen\r\n                                name=\"EditProfile\"\r\n                                component={EditProfileScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n\r\n\r\n                        </>) :\r\n                        (<>\r\n                            <Stack.Screen\r\n                                name=\"LandingPage\"\r\n                                component={LandingPage}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n\r\n\r\n                            <Stack.Screen\r\n                                name=\"Login\"\r\n                                component={LoginScreen}\r\n                                options={{ headerShown: true }}\r\n                            />\r\n                            <Stack.Screen\r\n                                name=\"Register\"\r\n                                component={RegistrationScreen}\r\n                                options={{ headerShown: false }}\r\n                            />\r\n                        </>)\r\n                }\r\n\r\n            </Stack.Navigator>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}