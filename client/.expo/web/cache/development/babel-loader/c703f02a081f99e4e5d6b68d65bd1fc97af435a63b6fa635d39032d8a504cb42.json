{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar YourFormComponent = function YourFormComponent(_ref) {\n  var _route$params;\n  var route = _ref.route;\n  var Id = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.userId;\n  console.log(Id);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    about = _useState4[0],\n    setAbout = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    image = _useState6[0],\n    setImage = _useState6[1];\n  var handleImageUpload = function handleImageUpload() {};\n  var handleSubmit = function handleSubmit() {\n    var formData = new FormData();\n    formData.append('name', name);\n    formData.append('about', about);\n    formData.append('image', image);\n    Axios.post('YOUR_SERVER_URL', formData).then(function (response) {}).catch(function (error) {});\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Ionicons, {\n        name: \"person\",\n        size: 24,\n        color: \"black\",\n        style: styles.icon\n      }), _jsx(TextInput, {\n        placeholder: \"Name\",\n        style: styles.input,\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Ionicons, {\n        name: \"information-circle\",\n        size: 24,\n        color: \"black\",\n        style: styles.icon\n      }), _jsx(TextInput, {\n        placeholder: \"About\",\n        style: styles.input,\n        value: about,\n        onChangeText: function onChangeText(text) {\n          return setAbout(text);\n        }\n      })]\n    }), _jsxs(TouchableOpacity, {\n      onPress: handleImageUpload,\n      children: [_jsx(Ionicons, {\n        name: \"attach\",\n        size: 24,\n        color: \"black\",\n        style: styles.icon\n      }), _jsx(Text, {\n        style: styles.uploadText,\n        children: \"Upload Image\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: handleSubmit,\n      style: styles.submitButton,\n      children: _jsx(Text, {\n        style: styles.submitButtonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  icon: {\n    marginRight: 8\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10\n  },\n  uploadText: {\n    fontSize: 16,\n    color: 'blue',\n    marginLeft: 8\n  },\n  submitButton: {\n    backgroundColor: 'blue',\n    borderRadius: 8,\n    paddingVertical: 12,\n    alignItems: 'center'\n  },\n  submitButtonText: {\n    fontSize: 18,\n    color: 'white'\n  }\n});\nexport default YourFormComponent;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Ionicons","jsx","_jsx","jsxs","_jsxs","YourFormComponent","_ref","_route$params","route","Id","params","userId","console","log","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","about","setAbout","_useState5","_useState6","image","setImage","handleImageUpload","handleSubmit","formData","FormData","append","Axios","post","then","response","catch","error","style","styles","container","children","inputContainer","size","color","icon","placeholder","input","value","onChangeText","text","onPress","uploadText","submitButton","submitButtonText","create","flex","padding","flexDirection","alignItems","marginBottom","marginRight","height","borderColor","borderWidth","borderRadius","paddingHorizontal","fontSize","marginLeft","backgroundColor","paddingVertical"],"sources":["D:/React-Native/chat/client/screens/EditProfile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons'; // Import Ionicons from the appropriate package\r\n\r\nconst YourFormComponent = ({ route }) => {\r\n    const Id = route?.params?.userId;\r\n    console.log(Id);\r\n    const [name, setName] = useState('');\r\n    const [about, setAbout] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const handleImageUpload = () => {\r\n        // Implement image upload logic here (e.g., using a file picker library)\r\n        // Set the selected image file using `setImage`\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        // Create a FormData object to send as a POST request\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('about', about);\r\n        formData.append('image', image); // Append the image file to the form data\r\n\r\n\r\n        Axios.post('YOUR_SERVER_URL', formData)\r\n            .then((response) => {\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.inputContainer}>\r\n                <Ionicons name=\"person\" size={24} color=\"black\" style={styles.icon} />\r\n                <TextInput\r\n                    placeholder=\"Name\"\r\n                    style={styles.input}\r\n                    value={name}\r\n                    onChangeText={(text) => setName(text)}\r\n                />\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n                <Ionicons name=\"information-circle\" size={24} color=\"black\" style={styles.icon} />\r\n                <TextInput\r\n                    placeholder=\"About\"\r\n                    style={styles.input}\r\n                    value={about}\r\n                    onChangeText={(text) => setAbout(text)}\r\n                />\r\n            </View>\r\n            <TouchableOpacity onPress={handleImageUpload}>\r\n                <Ionicons name=\"attach\" size={24} color=\"black\" style={styles.icon} />\r\n                <Text style={styles.uploadText}>Upload Image</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={handleSubmit} style={styles.submitButton}>\r\n                <Text style={styles.submitButtonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n    inputContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        marginBottom: 16,\r\n    },\r\n    icon: {\r\n        marginRight: 8,\r\n    },\r\n    input: {\r\n        flex: 1,\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        borderRadius: 8,\r\n        paddingHorizontal: 10,\r\n    },\r\n    uploadText: {\r\n        fontSize: 16,\r\n        color: 'blue',\r\n        marginLeft: 8,\r\n    },\r\n    submitButton: {\r\n        backgroundColor: 'blue',\r\n        borderRadius: 8,\r\n        paddingVertical: 12,\r\n        alignItems: 'center',\r\n    },\r\n    submitButtonText: {\r\n        fontSize: 18,\r\n        color: 'white',\r\n    },\r\n});\r\n\r\nexport default YourFormComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}