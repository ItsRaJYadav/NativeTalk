{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Ionicons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { SocketContext } from \"../context/SocketContext\";\nimport { AuthContext } from \"../context/authorization\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MessageItem = React.memo(function (_ref) {\n  var item = _ref.item,\n    currentUserId = _ref.currentUserId;\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: [styles.messageItem, {\n        alignSelf: item.senderId === currentUserId ? 'flex-end' : 'flex-start',\n        backgroundColor: item.senderId === currentUserId ? '#007BFF' : '#EFEFEF'\n      }],\n      children: _jsx(Text, {\n        style: [styles.messageText, {\n          color: item.senderId === currentUserId ? 'white' : 'black'\n        }],\n        children: item.text\n      })\n    }), _jsx(Text, {\n      style: [styles.timeText, {\n        alignSelf: item.senderId === currentUserId ? 'flex-end' : 'flex-start',\n        color: item.senderId === currentUserId ? '#007BFF' : 'gray'\n      }],\n      children: item.time\n    })]\n  });\n});\nvar ChatScreen = function ChatScreen(_ref2) {\n  var _route$params, _route$params2, _route$params3, _state$user;\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  var socket = useContext(SocketContext);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newMessage = _useState2[0],\n    setNewMessage = _useState2[1];\n  var Id = route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.userId;\n  var name = route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.name;\n  var uri = route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.avatar;\n  var _useContext = useContext(AuthContext),\n    _useContext2 = _slicedToArray(_useContext, 1),\n    state = _useContext2[0];\n  var currentUserId = state == null ? void 0 : (_state$user = state.user) == null ? void 0 : _state$user._id;\n  var flatListRef = useRef(null);\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentRoomId = _useState4[0],\n    setCurrentRoomId = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messages = _useState6[0],\n    setMessages = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isTyping = _useState8[0],\n    setIsTyping = _useState8[1];\n  var typingTimeoutRef = useRef(null);\n  useEffect(function () {\n    var userId1 = currentUserId;\n    var userId2 = Id;\n    var fetchMessagesAndRoomId = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          console.log('Sending Axios request...');\n          var response = yield axios.get(`/auth/chat/room/${userId1}/${userId2}`);\n          if (Array.isArray(response.data) && response.data.length > 0) {\n            var _response$data$ = response.data[0],\n              roomId = _response$data$.roomId,\n              _messages = _response$data$.messages;\n            setCurrentRoomId(roomId);\n            setMessages(_messages);\n            socket.emit('join-room', {\n              roomId: roomId,\n              role: 'user'\n            });\n          } else {\n            console.error('Invalid response format');\n          }\n        } catch (error) {\n          console.error('Error fetching chat room and messages:', error);\n        }\n      });\n      return function fetchMessagesAndRoomId() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    fetchMessagesAndRoomId();\n    socket.on('chat', function (data) {\n      if (data.roomId === currentRoomId && data.senderId !== currentUserId) {\n        setMessages(function (prevMessages) {\n          return [].concat(_toConsumableArray(prevMessages), [data]);\n        });\n        flatListRef.current.scrollToEnd({\n          animated: true\n        });\n      }\n    });\n    socket.on('typing-started-from-server', function (_ref4) {\n      var roomId = _ref4.roomId;\n      if (roomId === currentRoomId) {\n        setIsTyping(true);\n        clearTypingTimeout();\n      }\n    });\n    socket.on('typing-stopped-from-server', function (_ref5) {\n      var roomId = _ref5.roomId;\n      if (roomId === currentRoomId) {\n        setIsTyping(false);\n        startTypingTimeout();\n      }\n    });\n    return function () {\n      socket.off('chat');\n      socket.off('typing-started-from-server');\n      socket.off('typing-stopped-from-server');\n      clearTypingTimeout();\n    };\n  }, [route, currentUserId, Id, socket, currentRoomId]);\n  var clearTypingTimeout = function clearTypingTimeout() {\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = null;\n    }\n  };\n  var startTypingTimeout = function startTypingTimeout() {\n    typingTimeoutRef.current = setTimeout(function () {\n      if (currentRoomId) {\n        socket.emit('stop_typing', {\n          roomId: currentRoomId\n        });\n      }\n    }, 5000);\n  };\n  var handleSendMessage = function handleSendMessage() {\n    if (!currentRoomId) {\n      console.error('Room ID is not available.');\n      return;\n    }\n    var currentTime = new Date().toLocaleString();\n    var newMessageObj = {\n      senderId: currentUserId,\n      text: newMessage,\n      roomId: currentRoomId,\n      time: currentTime\n    };\n    socket.emit('chat', newMessageObj);\n    setMessages(function (prevMessages) {\n      return [].concat(_toConsumableArray(prevMessages), [newMessageObj]);\n    });\n    setNewMessage('');\n    socket.emit('stop_typing', {\n      roomId: currentRoomId\n    });\n    flatListRef.current.scrollToEnd({\n      animated: true\n    });\n  };\n  var handleTyping = function handleTyping() {\n    if (!currentRoomId) {\n      console.error('Room ID is not available.');\n      return;\n    }\n    socket.emit('typing', {\n      roomId: currentRoomId\n    });\n    clearTypingTimeout();\n  };\n  var handleTypingStopped = function handleTypingStopped() {\n    if (!currentRoomId) {\n      console.error('Room ID is not available.');\n      return;\n    }\n    socket.emit('stop_typing', {\n      roomId: currentRoomId\n    });\n    startTypingTimeout();\n  };\n  var navigateToUserProfile = function navigateToUserProfile() {\n    navigation.navigate('UserProfile', {\n      userId: Id\n    });\n  };\n  var openFilePicker = function openFilePicker() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerContainer,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.profileInfo,\n        onPress: navigateToUserProfile,\n        children: [_jsx(Image, {\n          source: {\n            uri: uri\n          },\n          style: styles.profileImage\n        }), _jsx(Text, {\n          style: styles.profileName,\n          children: name\n        }), isTyping && _jsx(View, {\n          style: styles.typingIndicator,\n          children: _jsx(Text, {\n            style: styles.typingText,\n            children: \"typing...\"\n          })\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), currentRoomId !== null ? _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item, index) {\n        return item._id || index.toString();\n      },\n      renderItem: function renderItem(_ref6) {\n        var item = _ref6.item;\n        return _jsx(MessageItem, {\n          item: item,\n          currentUserId: currentUserId\n        });\n      },\n      ref: flatListRef,\n      onContentSizeChange: function onContentSizeChange() {\n        return flatListRef.current.scrollToEnd({\n          animated: true\n        });\n      }\n    }) : _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#007BFF\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Type a message...\",\n        value: newMessage,\n        onChangeText: function onChangeText(text) {\n          return setNewMessage(text);\n        },\n        onFocus: handleTyping,\n        onBlur: handleTypingStopped,\n        editable: currentRoomId !== null,\n        multiline: true\n      }), newMessage.trim().length < 1 && !isTyping && _jsx(_Fragment, {\n        children: _jsx(TouchableOpacity, {\n          style: styles.iconButton,\n          onPress: openFilePicker,\n          children: _jsx(Ionicons, {\n            name: \"attach\",\n            size: 28,\n            color: \"black\"\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: handleSendMessage,\n        disabled: currentRoomId === null || newMessage.trim() === '',\n        children: _jsx(Ionicons, {\n          name: \"send\",\n          size: 24,\n          color: \"white\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  profileInfo: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  profileImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 8\n  },\n  profileName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  backButton: {\n    padding: 8\n  },\n  messageContainer: {\n    flexGrow: 1\n  },\n  messageItem: {\n    backgroundColor: '#EFEFEF',\n    borderRadius: 8,\n    padding: 8,\n    marginBottom: 8,\n    alignSelf: 'flex-start',\n    maxWidth: '70%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  messageText: {\n    fontSize: 16,\n    flex: 1\n  },\n  timeText: {\n    fontSize: 12,\n    marginLeft: 8\n  },\n  dateText: {\n    textAlign: 'center',\n    paddingVertical: 8,\n    color: 'gray'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginBottom: 8\n  },\n  sendButton: {\n    backgroundColor: '#007BFF',\n    borderRadius: 50,\n    padding: 8,\n    marginLeft: 8\n  },\n  typingIndicator: {\n    padding: 8,\n    alignItems: 'center'\n  },\n  typingText: {\n    fontStyle: 'italic',\n    color: 'gray'\n  },\n  iconButton: {\n    marginLeft: 8\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","View","Text","TextInput","TouchableOpacity","FlatList","StyleSheet","Image","ActivityIndicator","Ionicons","axios","SocketContext","AuthContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MessageItem","memo","_ref","item","currentUserId","children","style","styles","messageItem","alignSelf","senderId","backgroundColor","messageText","color","text","timeText","time","ChatScreen","_ref2","_route$params","_route$params2","_route$params3","_state$user","navigation","route","socket","_useState","_useState2","_slicedToArray","newMessage","setNewMessage","Id","params","userId","name","uri","avatar","_useContext","_useContext2","state","user","_id","flatListRef","_useState3","_useState4","currentRoomId","setCurrentRoomId","_useState5","_useState6","messages","setMessages","_useState7","_useState8","isTyping","setIsTyping","typingTimeoutRef","userId1","userId2","fetchMessagesAndRoomId","_ref3","_asyncToGenerator","console","log","response","get","Array","isArray","data","length","_response$data$","roomId","emit","role","error","apply","arguments","on","prevMessages","concat","_toConsumableArray","current","scrollToEnd","animated","_ref4","clearTypingTimeout","_ref5","startTypingTimeout","off","clearTimeout","setTimeout","handleSendMessage","currentTime","Date","toLocaleString","newMessageObj","handleTyping","handleTypingStopped","navigateToUserProfile","navigate","openFilePicker","container","headerContainer","profileInfo","onPress","source","profileImage","profileName","typingIndicator","typingText","backButton","goBack","size","keyExtractor","index","toString","renderItem","_ref6","ref","onContentSizeChange","inputContainer","input","placeholder","value","onChangeText","onFocus","onBlur","editable","multiline","trim","iconButton","sendButton","disabled","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","width","height","borderRadius","marginRight","fontSize","fontWeight","messageContainer","flexGrow","maxWidth","marginLeft","dateText","textAlign","paddingVertical","borderColor","borderWidth","paddingHorizontal","fontStyle"],"sources":["D:/React-Native/chat/client/screens/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  StyleSheet,\r\n  Image,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport axios from 'axios';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport { AuthContext } from '../context/authorization';\r\n\r\nconst MessageItem = React.memo(({ item, currentUserId }) => {\r\n  return (\r\n    <View>\r\n      <View\r\n        style={[\r\n          styles.messageItem,\r\n          {\r\n            alignSelf: item.senderId === currentUserId ? 'flex-end' : 'flex-start',\r\n            backgroundColor: item.senderId === currentUserId ? '#007BFF' : '#EFEFEF',\r\n          },\r\n        ]}\r\n      >\r\n        <Text\r\n          style={[\r\n            styles.messageText,\r\n            {\r\n              color: item.senderId === currentUserId ? 'white' : 'black',\r\n            },\r\n          ]}\r\n        >\r\n          {item.text}\r\n        </Text>\r\n      </View>\r\n      <Text\r\n        style={[\r\n          styles.timeText,\r\n          {\r\n            alignSelf: item.senderId === currentUserId ? 'flex-end' : 'flex-start',\r\n            color: item.senderId === currentUserId ? '#007BFF' : 'gray',\r\n          },\r\n        ]}\r\n      >\r\n        {item.time}\r\n      </Text>\r\n    </View>\r\n  );\r\n});\r\n\r\nconst ChatScreen = ({ navigation, route }) => {\r\n  const socket = useContext(SocketContext);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const Id = route?.params?.userId;\r\n  const name = route?.params?.name;\r\n  const uri = route?.params?.avatar;\r\n\r\n  const [state] = useContext(AuthContext);\r\n  const currentUserId = state?.user?._id;\r\n  const flatListRef = useRef(null);\r\n  const [currentRoomId, setCurrentRoomId] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const typingTimeoutRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const userId1 = currentUserId;\r\n    const userId2 = Id;\r\n\r\n    const fetchMessagesAndRoomId = async () => {\r\n      try {\r\n        console.log('Sending Axios request...');\r\n        const response = await axios.get(`/auth/chat/room/${userId1}/${userId2}`);\r\n\r\n        if (Array.isArray(response.data) && response.data.length > 0) {\r\n          const { roomId, messages } = response.data[0];\r\n\r\n          setCurrentRoomId(roomId);\r\n          setMessages(messages);\r\n          // console.log(response.data);\r\n\r\n          socket.emit('join-room', { roomId, role: 'user' });\r\n        } else {\r\n          console.error('Invalid response format');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching chat room and messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessagesAndRoomId();\r\n\r\n    socket.on('chat', (data) => {\r\n      if (data.roomId === currentRoomId && data.senderId !== currentUserId) {\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n\r\n        // Scroll to the end with animation\r\n        flatListRef.current.scrollToEnd({ animated: true });\r\n      }\r\n    });\r\n\r\n    socket.on('typing-started-from-server', ({ roomId }) => {\r\n      if (roomId === currentRoomId) {\r\n        setIsTyping(true);\r\n        clearTypingTimeout();\r\n      }\r\n    });\r\n\r\n    socket.on('typing-stopped-from-server', ({ roomId }) => {\r\n      if (roomId === currentRoomId) {\r\n        setIsTyping(false);\r\n        startTypingTimeout();\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('chat');\r\n      socket.off('typing-started-from-server');\r\n      socket.off('typing-stopped-from-server');\r\n      clearTypingTimeout();\r\n    };\r\n  }, [route, currentUserId, Id, socket, currentRoomId]);\r\n\r\n  const clearTypingTimeout = () => {\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n      typingTimeoutRef.current = null;\r\n    }\r\n  };\r\n\r\n  const startTypingTimeout = () => {\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      if (currentRoomId) {\r\n        socket.emit('stop_typing', { roomId: currentRoomId });\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!currentRoomId) {\r\n      console.error('Room ID is not available.');\r\n      return;\r\n    }\r\n\r\n    const currentTime = new Date().toLocaleString();\r\n    const newMessageObj = {\r\n      senderId: currentUserId,\r\n      text: newMessage,\r\n      roomId: currentRoomId,\r\n      time: currentTime,\r\n    };\r\n\r\n    socket.emit('chat', newMessageObj);\r\n\r\n    setMessages((prevMessages) => [...prevMessages, newMessageObj]);\r\n    setNewMessage('');\r\n\r\n    socket.emit('stop_typing', { roomId: currentRoomId });\r\n    \r\n\r\n    // Scroll to the end with animation\r\n    flatListRef.current.scrollToEnd({ animated: true });\r\n    \r\n  };\r\n\r\n  const handleTyping = () => {\r\n    if (!currentRoomId) {\r\n      console.error('Room ID is not available.');\r\n      return;\r\n    }\r\n\r\n    socket.emit('typing', { roomId: currentRoomId });\r\n    clearTypingTimeout();\r\n  };\r\n\r\n  const handleTypingStopped = () => {\r\n    if (!currentRoomId) {\r\n      console.error('Room ID is not available.');\r\n      return;\r\n    }\r\n\r\n    socket.emit('stop_typing', { roomId: currentRoomId });\r\n    startTypingTimeout();\r\n  };\r\n\r\n  const navigateToUserProfile = () => {\r\n    navigation.navigate('UserProfile', { userId: Id });\r\n  };\r\n\r\n  \r\n  const openFilePicker = () => {\r\n    // Implement file picker \r\n  };\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerContainer}>\r\n        <TouchableOpacity style={styles.profileInfo} onPress={navigateToUserProfile}>\r\n          <Image source={{ uri }} style={styles.profileImage} />\r\n          <Text style={styles.profileName}>{name}</Text>\r\n\r\n          {isTyping && (\r\n            <View style={styles.typingIndicator}>\r\n              <Text style={styles.typingText}>typing...</Text>\r\n            </View>\r\n          )}\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {currentRoomId !== null ? (\r\n        <FlatList\r\n          data={messages}\r\n          keyExtractor={(item, index) => item._id || index.toString()}\r\n          renderItem={({ item }) => (\r\n            <MessageItem item={item} currentUserId={currentUserId} />\r\n          )}\r\n          ref={flatListRef}\r\n          onContentSizeChange={() => flatListRef.current.scrollToEnd({ animated: true })}\r\n        />\r\n      ) : (\r\n        <ActivityIndicator size=\"large\" color=\"#007BFF\" />\r\n      )}\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Type a message...\"\r\n          value={newMessage}\r\n          onChangeText={(text) => setNewMessage(text)}\r\n          onFocus={handleTyping}\r\n          onBlur={handleTypingStopped}\r\n          editable={currentRoomId !== null}\r\n          multiline\r\n        />\r\n        {newMessage.trim().length < 1 && !isTyping && (\r\n          <>\r\n           \r\n            <TouchableOpacity style={styles.iconButton} onPress={openFilePicker}>\r\n              <Ionicons name=\"attach\" size={28} color=\"black\" />\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n        <TouchableOpacity\r\n          style={styles.sendButton}\r\n          onPress={handleSendMessage}\r\n          disabled={currentRoomId === null || newMessage.trim() === ''}\r\n        >\r\n          <Ionicons name=\"send\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  profileInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  profileImage: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    marginRight: 8,\r\n  },\r\n  profileName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  backButton: {\r\n    padding: 8,\r\n  },\r\n  messageContainer: {\r\n    flexGrow: 1,\r\n  },\r\n  messageItem: {\r\n    backgroundColor: '#EFEFEF',\r\n    borderRadius: 8,\r\n    padding: 8,\r\n    marginBottom: 8,\r\n    alignSelf: 'flex-start', // Adjust as needed\r\n    maxWidth: '70%',\r\n    flexDirection: 'row', // Add this to align text and time horizontally\r\n    justifyContent: 'space-between', // Add this to create space between text and time\r\n    alignItems: 'center', // Add this to vertically center text and time\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n    flex: 1, // Allow text to wrap if it overflows\r\n  },\r\n  timeText: {\r\n    fontSize: 12,\r\n    marginLeft: 8, // Add some spacing between text and time\r\n  },\r\n  dateText: {\r\n    textAlign: 'center',\r\n    paddingVertical: 8,\r\n    color: 'gray',\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 10,\r\n    marginBottom: 8,\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#007BFF',\r\n    borderRadius: 50,\r\n    padding: 8,\r\n    marginLeft: 8,\r\n  },\r\n  // Style for the typing indicator\r\n  typingIndicator: {\r\n    padding: 8,\r\n    alignItems: 'center',\r\n  },\r\n  typingText: {\r\n    fontStyle: 'italic',\r\n    color: 'gray',\r\n  },\r\n  iconButton: {\r\n    marginLeft: 8,\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}